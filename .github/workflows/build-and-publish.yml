name: build-and-publish

permissions:
  contents: write

on:
  push:
    branches: [ "feat/build-addon" ]    # roda em TODO push
    tags:     [ "v*.*.*" ] # e também quando criar tag de release
  workflow_dispatch: {}

jobs:
  prebuild:
    strategy:
      fail-fast: false
      matrix:
        #os:   [ubuntu-latest, macos-latest, windows-latest]
        #node: [18, 20, 22]
        os:   [ubuntu-latest]
        node: [20]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python 3.10 (for node-gyp tools)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Fetch vendor bundle for this runner
        run: npm run fetch:vendor
        env:
          REPO_SLUG: ${{ github.repository }}
          VENDOR_RELEASE_TAG: vendor-v1   # troque se usou outro nome
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install deps
        run: npm install

      - name: Build (sanity)
        run: npm run build

      - name: Generate prebuilds (N-API)
        run: npm run prebuild

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ runner.os }}-node${{ matrix.node }}
          path: prebuilds/**

  release:
    needs: prebuild
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node for publish
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Download prebuild artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: prebuilds-*
          merge-multiple: true
          path: prebuilds-agg

      - name: Merge prebuilds into package tree
        shell: bash
        run: |
          shopt -s globstar nullglob
          mkdir -p prebuilds
          for f in prebuilds-agg/**/prebuilds/**; do
            dest="prebuilds/${f#*/prebuilds/}"
            mkdir -p "$(dirname "$dest")"
            cp -f "$f" "$dest"
          done
          echo "Prebuilds merged:"
          find prebuilds -type f -maxdepth 3 -print || true

      # (opcional, mas útil para debug)
      - name: npm pack --dry-run (show files)
        run: npm pack --dry-run

      - name: Install prod deps
        run: npm install --omit=dev --ignore-scripts

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_IGNORE_SCRIPTS: 'true'

      - name: Create GitHub Release with assets
        if: ${{ hashFiles('prebuilds/**') != '' }}
        uses: softprops/action-gh-release@v2
        with:
          files: prebuilds/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
